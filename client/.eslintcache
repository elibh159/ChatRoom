[{"D:\\project\\udemy\\ChatRoom\\client\\src\\index.js":"1","D:\\project\\udemy\\ChatRoom\\client\\src\\reportWebVitals.js":"2","D:\\project\\udemy\\ChatRoom\\client\\src\\App.js":"3","D:\\project\\udemy\\ChatRoom\\client\\src\\UserContext.js":"4","D:\\project\\udemy\\ChatRoom\\client\\src\\components\\chat\\Chat.js":"5","D:\\project\\udemy\\ChatRoom\\client\\src\\components\\home\\Home.js":"6","D:\\project\\udemy\\ChatRoom\\client\\src\\components\\layout\\Navbar.js":"7","D:\\project\\udemy\\ChatRoom\\client\\src\\components\\home\\RoomList.js":"8","D:\\project\\udemy\\ChatRoom\\client\\src\\components\\home\\Room.js":"9"},{"size":500,"mtime":1607493089533,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607493089533,"results":"12","hashOfConfig":"11"},{"size":763,"mtime":1607761152316,"results":"13","hashOfConfig":"11"},{"size":87,"mtime":1607508264594,"results":"14","hashOfConfig":"11"},{"size":1469,"mtime":1608466622291,"results":"15","hashOfConfig":"11"},{"size":2512,"mtime":1607770083557,"results":"16","hashOfConfig":"11"},{"size":796,"mtime":1607513129260,"results":"17","hashOfConfig":"11"},{"size":392,"mtime":1607761288682,"results":"18","hashOfConfig":"11"},{"size":294,"mtime":1607756301326,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1eo2vdb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\project\\udemy\\ChatRoom\\client\\src\\index.js",[],["41","42"],"D:\\project\\udemy\\ChatRoom\\client\\src\\reportWebVitals.js",[],"D:\\project\\udemy\\ChatRoom\\client\\src\\App.js",[],"D:\\project\\udemy\\ChatRoom\\client\\src\\UserContext.js",[],"D:\\project\\udemy\\ChatRoom\\client\\src\\components\\chat\\Chat.js",["43","44","45"],"D:\\project\\udemy\\ChatRoom\\client\\src\\components\\home\\Home.js",["46","47"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport { UserContext } from '../../UserContext';\r\nimport { Link } from 'react-router-dom';\r\nimport RoomList from './RoomList';\r\nimport io from 'socket.io-client';\r\nlet socket;\r\nconst Home = () => {\r\n  const ENDPT = 'localhost:5000';\r\n  useEffect(() => {\r\n    socket = io(ENDPT);\r\n    return () => {\r\n      socket.emit('disconnect');\r\n      socket.off();\r\n    }\r\n  }, [ENDPT])\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [room, setRoom] = useState('');\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    socket.emit('create-room', room);\r\n    console.log(room);\r\n    setRoom('');\r\n\r\n  }\r\n  const rooms = [\r\n    {\r\n      name: 'room1',\r\n      _id: '123'\r\n    },\r\n    {\r\n      name: 'room2',\r\n      _id: '456'\r\n    }]\r\n  const setAsEli = () => {\r\n    const eli = {\r\n      name: 'Eli',\r\n      email: 'eli@email.com',\r\n      password: '123',\r\n      id: '123'\r\n    }\r\n    setUser(eli);\r\n  }\r\n  const setAsTom = () => {\r\n    const tom = {\r\n      name: 'Tom',\r\n      email: 'tom@email.com',\r\n      password: '456',\r\n      id: '456'\r\n    }\r\n    setUser(tom);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <div className=\"card blue-grey darken-1\">\r\n            <div className=\"card-content white-text\">\r\n              <span className=\"card-title\">Welcome {user ? user.name : ''}</span>\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                  <div className=\"input-field col s12\">\r\n                    <input\r\n                      placeholder=\"Enter a room name\"\r\n                      id=\"room\" type=\"text\" className=\"validate\"\r\n                      value={room}\r\n                      onChange={e => setRoom(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"room\">Room</label>\r\n                  </div>\r\n                </div>\r\n                <button className=\"btn\">Create Room</button>\r\n              </form>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <a href=\"#\" onClick={setAsEli}>set as Eli</a>\r\n              <a href=\"#\" onClick={setAsTom}>set as Tom</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s6 m5 offset-1\">\r\n          <RoomList rooms={rooms} />\r\n        </div>\r\n      </div>\r\n\r\n      <Link to={'/chat'}>\r\n        <button>go to chat</button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","D:\\project\\udemy\\ChatRoom\\client\\src\\components\\layout\\Navbar.js",[],"D:\\project\\udemy\\ChatRoom\\client\\src\\components\\home\\RoomList.js",[],"D:\\project\\udemy\\ChatRoom\\client\\src\\components\\home\\Room.js",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":10,"nodeType":"56","messageId":"57","endLine":3,"endColumn":14},{"ruleId":"54","severity":1,"message":"58","line":9,"column":17,"nodeType":"56","messageId":"57","endLine":9,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":16,"column":6,"nodeType":"61","endLine":16,"endColumn":8,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":75,"column":15,"nodeType":"65","endLine":75,"endColumn":46},{"ruleId":"63","severity":1,"message":"64","line":76,"column":15,"nodeType":"65","endLine":76,"endColumn":46},{"ruleId":"50","replacedBy":"66"},{"ruleId":"52","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room_id', 'user.id', and 'user.name'. Either include them or remove the dependency array.","ArrayExpression",["70"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["68"],["69"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [room_id, user.id, user.name]",{"range":"73","text":"74"},[595,597],"[room_id, user.id, user.name]"]